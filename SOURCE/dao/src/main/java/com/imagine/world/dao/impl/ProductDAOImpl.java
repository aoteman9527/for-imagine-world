
 /***************************************************
 * Generated by DAOGenerator http://daogenerator.u-db.com
 * http://daogenerator.u-db.com email: buraksrc@gmail.com
 ***************************************************/
 
 
 package com.imagine.world.dao.impl;


 import com.imagine.world.customdaosupport.CustomDAOSupport;
 import com.imagine.world.dao.ProductDAO;
 import com.imagine.world.models.Product;
 import org.hibernate.FlushMode;
 import org.hibernate.Query;

 import java.io.Serializable;
 import java.util.Date;
 import java.util.List;
 
 
 /***************************************************
 *DAO class of PRODUCT table.
 *Generated on Wed Feb 05 18:09:02 ICT 2014
 ***************************************************/
 
 
 public class ProductDAOImpl extends CustomDAOSupport implements Serializable, ProductDAO {
 
 /**
 * @return Product
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> findAll(){

		Query query = getDAOManager().createQuery(" select t from Product t");

		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * Inserts Product
 * @param: Product
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public void save(Product arg0){
        getDAOManager().beginTransaction();
		getDAOManager().persist(arg0);
        getDAOManager().getTransaction().commit();
	}
 
 /**
 * Updates Product
 * @param: Product
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public void update(Product arg0){
        getDAOManager().beginTransaction();
		getDAOManager().merge(arg0);
        getDAOManager().getTransaction().commit();

	}
 
 /**
 * Removes Product
 * @param: Product
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public void delete(Product arg0){
        getDAOManager().beginTransaction();
		getDAOManager().delete(arg0);
        getDAOManager().getTransaction().commit();

	}
 
 /**
 * @return Product
 * @param: java.lang.Integer IdProduct
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByIdProduct(Integer idProduct){

		Query query = getDAOManager().createQuery(" select t from Product t where t.idProduct = :idProduct ");

		query.setParameter("idProduct", idProduct);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.Integer idProduct
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByIdProduct(Integer idProduct, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.idProduct = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, idProduct);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.lang.String Name
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByName(String name){

		Query query = getDAOManager().createQuery(" select t from Product t where t.name = ?1 ");

		query.setParameter(1, name);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.String name
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByName(String name, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.name = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, name);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.lang.String Description
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByDescription(String description){

		Query query = getDAOManager().createQuery(" select t from Product t where t.description = ?1 ");

		query.setParameter(1, description);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.String description
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByDescription(String description, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.description = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, description);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.lang.String Price
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByPrice(String price){

		Query query = getDAOManager().createQuery(" select t from Product t where t.price = ?1 ");

		query.setParameter(1, price);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.String price
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByPrice(String price, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.price = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, price);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.lang.String ProductCode
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByProductCode(String productCode){

		Query query = getDAOManager().createQuery(" select t from Product t where t.productCode = :productCode ");

		query.setParameter("productCode", productCode);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.String productCode
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByProductCode(String productCode, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.productCode = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, productCode);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.lang.Integer ProductAmount
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByProductAmount(Integer productAmount){

		Query query = getDAOManager().createQuery(" select t from Product t where t.productAmount = ?1 ");

		query.setParameter(1, productAmount);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.lang.Integer productAmount
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByProductAmount(Integer productAmount, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.productAmount = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, productAmount);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}
 
 /**
 * @return Product
 * @param: java.util.Date LastUpdateDate
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByLastUpdateDate(Date lastUpdateDate){

		Query query = getDAOManager().createQuery(" select t from Product t where t.lastUpdateDate = ?1 ");

		query.setParameter(1, lastUpdateDate);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

/**
 * @return Product
 * @param: java.util.Date lastUpdateDate
 * @param: int startposition
 * @param: int maxresults
 * Generated on: Wed Feb 05 18:09:02 ICT 2014
 * @See Product
 */
	public List<Product> getProductByLastUpdateDate(Date lastUpdateDate, int startPosition, int maxResult){

		Query query = getDAOManager().createQuery(" select t from Product t where t.lastUpdateDate = ?1 ");

		if(startPosition > 0 && startPosition < maxResult){
			query.setMaxResults(maxResult);
			query.setFirstResult(startPosition);
		}

			query.setParameter(1, lastUpdateDate);


		List<Product> results = query.list();

		if (results !=null && results.size() > 0) {
			return results;
		}

		return null;
	}

     @Override
     public int deleteByProductCode(String productCode) {
         getDAOManager().beginTransaction();

         Query query = getDAOManager().createQuery(" delete from Product t where t.productCode  = :productCode ");

         query.setParameter("productCode", productCode);


         int results = query.executeUpdate();
         getDAOManager().getTransaction().commit();

         return results;
     }


 }